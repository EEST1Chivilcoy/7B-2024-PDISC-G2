@page "/SGE/index"
@using AntDesign
@using System.Security.Claims
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<div style="display: flex; justify-content: center; align-items: center; min-height: 100vh; background-color: #f0f2f5; width: 100%;">
    <Row Gutter="16" Style="width: 100%; max-width: 1200px;">
        <Col Span="6">
        <Card Style="margin: 16px 0; display: flex; flex-direction: column; align-items: center;">
            <Avatar Size="64" Icon="user" />
            <div class="mt-2" style="text-align: center;">
                <h3>@userName, @userSurname</h3>
                <p>@userEmail</p>
            </div>
            <div class="mt-2">
                <Tag Color="blue">Interaction Expert</Tag>
            </div>
        </Card>
        </Col>
        <Col Span="18">
        <Card Style="margin: 16px; padding: 24px;">
            <Row Gutter="16">
                <Col Span="12">
                <Button Type="primary" Block OnClick="@(() => NavigateTo("/SGE/EMATP/GestionOrdenadores"))">
                    Gestión de Ordenadores
                </Button>
                </Col>
                <Col Span="12">
                <Button Type="primary" Block OnClick="@(() => NavigateTo("/SGE/EMATP/GestionSolicitudes"))">
                    Gestión de Peticiones
                </Button>
                </Col>
            </Row>
        </Card>
        </Col>
    </Row>
</div>

@code {
    private string userName;
    private string userEmail;
    private string userSurname;

    private void NavigateTo(string route)
    {
        NavigationManager.NavigateTo(route, true);
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            // Usamos los ClaimTypes estándar para mayor claridad y consistencia
            var personIdClaim = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            userName = user.FindFirst(ClaimTypes.GivenName)?.Value;
            userSurname = user.FindFirst(ClaimTypes.Surname)?.Value;
            userEmail = user.FindFirst(ClaimTypes.Email)?.Value;
        }
    }
}