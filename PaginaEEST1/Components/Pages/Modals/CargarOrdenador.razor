@using PaginaEEST1.Services
@using PaginaEEST1.Data.Models.Objetos_Fisicos
@using PaginaEEST1.Data.ViewModels
@using PaginaEEST1.Data.Enums
@inject IMessageService message
@inject IOrdenadorService OrdenadorService

<div clas="container">
    <Form Model="@computadoraView" OnFinish="OnFinish">
        <div clas="form-grid">
            <FormItem Label="Estado de la Computadora">
                <EnumSelect TEnum="ComputerStatus" @bind-Value="@computadoraView.Status" />
            </FormItem>
            <FormItem Label="Nombre o Codigo">
                <Input @bind-Value="@computadoraView.DeviceName" />
            </FormItem>
            <FormItem Label="Sistema Operativo">
                <Input @bind-Value="@computadoraView.OperatingSystem" />
            </FormItem>
            <FormItem Label="Procesador">
                <Input @bind-Value="@computadoraView.Processor" />
            </FormItem>
            <FormItem Label="RAM">
                <Input @bind-Value="@computadoraView.RAM" />
            </FormItem>
            <FormItem Label="Almacenamiento">
                <Input @bind-Value="@computadoraView.Storage" />
            </FormItem>
            <FormItem Label="Tipo de almacenamiento">
                <EnumSelect TEnum="TypeStorage" @bind-Value="@computadoraView.StorageType" />
            </FormItem>
            <FormItem Label="Ubicación dentro de la Institució">
                <Input @bind-Value="@computadoraView.Location" />
            </FormItem>
            <FormItem>
                <Button Type="primary" HtmlType="submit">Guardar</Button>
                <Button OnClick="HandleClose">Cerrar</Button>
            </FormItem>
        </div>
    </Form>
</div>

@code {
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    //Variables
    private DesktopViewModel computadoraView = new();
    private string? ImagenQR;

    // Funciones
    private async Task HandleClose()
    {
        await OnClose.InvokeAsync(false);
    }

    private async Task OnFinish()
    {
        try
        {
            Desktop guardado = await OrdenadorService.SaveDesktop(computadoraView);
            await message.Success("Se guardo la Computadora con exito");
            ImagenQR = await OrdenadorService.GenerarQR(guardado.Id);
            computadoraView = new();
            await OnClose.InvokeAsync(true);
            StateHasChanged();
        }
        catch
        {
            await message.Error("Error inesperado al guardar una Computadora");
        }
    }
}