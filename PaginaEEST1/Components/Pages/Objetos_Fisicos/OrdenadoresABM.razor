@using PaginaEEST1.Services
@using PaginaEEST1.Data.Models.Objetos_Fisicos
@using PaginaEEST1.Components.Pages.Modals
@using PaginaEEST1.Data.ViewModels
@using PaginaEEST1.Data.Enums
@inject IMessageService message
@inject IComputerService ComputerService
@page "/Gestion_Ordenadores"
@attribute [Authorize]

<Flex Class="flex-container" Justify="center" Align="center" Style="height: 100%; width:100%;">
    <div class="template">
        <Table TItem="ComputerViewModel"
               DataSource="@devices"
               PageIndex="1"
               PageSize="6"
               Responsive>

            <TitleTemplate>
                <Space>
                    <SpaceItem>
                        <Button Type="primary"
                                OnClick="() => {visAdd = true;}">
                            <Icon Type="plus" /> Agregar
                        </Button>
                    </SpaceItem>
                </Space>
            </TitleTemplate>

            <ColumnDefinitions>
                @* Datos *@
                <PropertyColumn Title="Nombre del Ordenador"
                                Property="@(v => v.DeviceName)"
                                Sortable />
                <PropertyColumn Title="Tipo"
                                Property="@(v => v.Type)"
                                Sortable />
                <PropertyColumn Title="Sistema Operativo"
                                Property="@(v => v.OperatingSystem)"
                                Sortable />
                <PropertyColumn Title="Estado"
                                Property="@(v => v.Status)"
                                Sortable />
                @* Acciones *@
                <ActionColumn Title="Acciones" Align="ColumnAlign.Center">
                    <Space>
                        <SpaceItem>
                            <Button Type="primary" OnClick="() => openDetails(context.ID)">
                                <Icon Type="desktop" /> Detalles
                            </Button>
                            <Button OnClick="() => {}">
                                <Icon Type="edit" /> Editar
                            </Button>
                            <Popconfirm Title="¿Está seguro de remover este Ordenador?"
                                    OnConfirm="() => delComputer(context.ID)"
                                    OkText="si"
                                    CancelText="no"
                                >
                                <Button Danger>
                                    <Icon Type="down" /> Remover
                                </Button>
                            </Popconfirm>
                        </SpaceItem>
                    </Space>
                </ActionColumn>
                @* Logo del Ordenador. Va a haber uno diferente si es una Computadora o Netbook *@
                <Column TData="ComputerViewModel" Width="100">
                    <Image Src="@context.Logo" />
                </Column>
            </ColumnDefinitions>
        </Table>
    </div>
</Flex>


@if (visAdd == true)
{
    <Modal Visible="visAdd" Footer="null" OnCancel="() => closeAdd(false)">
        <AddComputer OnClose="closeAdd" />
    </Modal>
}
@if (visDetails == true)
{
    <Modal Visible="visDetails" Footer="null" OnCancel="() => {visDetails = false;}">
        <DesktopDetails ID="detID" />
    </Modal>
}

@code {
    // Variables
    List<ComputerViewModel?> devices = new();
    private string? ImagenQR;

    // Handles Modals
    private int detID { get; set; }
    private bool visAdd = false;
    private bool visDetails = false;

    private void openDetails(int ID)
    {
        detID = ID;
        visDetails = true;
    }

    private async Task closeAdd(bool success)
    {
        visAdd = false;
        if (success == true)
        {
            await OnInitializedAsync();
        }
        StateHasChanged();
    }

    // Funciones
    
    private async Task delComputer(int ID)
    {
        await ComputerService.DelComputer(ID);
        await OnInitializedAsync();
    }

    // Init
    protected override async Task OnInitializedAsync()
    {
        devices = await ComputerService.GetListComputerDevices();
        StateHasChanged();
    }
}